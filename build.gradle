




plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.tfoms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}



dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}


test {
	useJUnitPlatform()
}
compileJava.doFirst { 
 
     String page1 = new File('ext/dist/page1.html').getText('UTF-8').replace('src="page1.js"', 'th:src="@{/js/page1.js}"') // .replace('href="styles/main.css"', 'th:href="@{/styles/main.css}"')
   		String page2 = new File('ext/dist/page2.html').getText('UTF-8').replace('src="page2.js"', 'th:src="@{/js/page2.js}"') // .replace('href="styles/main.css"', 'th:href="@{/styles/main.css}"')
   	
   		
        def appPage1 = new File('src/main/resources/templates/page1.html')
        def appPage2 = new File('src/main/resources/templates/page2.html')
		
		appPage1.write(page1)
		appPage2.write(page2)

		copy{
		
			from 'ext/dist/*.js'
    		into 'src/main/resources/static/js'	
     	}

 }



tasks.register('dev') {
    doLast {
        println 'Hello world!'
        
        String page1 = new File('ext/dist/page1.html').getText('UTF-8').replace('src="page1.js"', 'th:src="@{/js/page1.js}"') // .replace('href="styles/main.css"', 'th:href="@{/styles/main.css}"')
   		String page2 = new File('ext/dist/page2.html').getText('UTF-8').replace('src="page2.js"', 'th:src="@{/js/page2.js}"') // .replace('href="styles/main.css"', 'th:href="@{/styles/main.css}"')
   	
   		
        def appPage1 = new File('src/main/resources/templates/page1.html')
        def appPage2 = new File('src/main/resources/templates/page2.html')
		
		appPage1.write(page1)
		appPage2.write(page2)

		copy{
		
			from 'ext/dist'
			include '*.js'
    		into 'src/main/resources/static/js'	
     	}
     	
 //    	copy{
		
//			from 'ext/templates/styles'
//    		into 'src/main/resources/static/styles'	
//     	}

  }  
     
}




